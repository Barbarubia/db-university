############################
#   QUERIES CON GROUP BY   #
############################

1. Contare quanti iscritti ci sono stati ogni anno

SELECT YEAR(`enrolment_date`) AS `enrolment_year`, COUNT(`id`) AS n_students
FROM `students`
GROUP BY `enrolment_year`;





2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT `office_address`, COUNT(`id`) AS n_teachers
FROM `teachers`
GROUP BY `office_address`;





3. Calcolare la media dei voti di ogni appello d'esame

SELECT `exam_id`, AVG(vote) AS average_vote
FROM `exam_student`
GROUP BY `exam_id`;





4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT `department_id`, COUNT(`id`) AS `n_degrees`
FROM `degrees`
GROUP BY `department_id`;





########################
#   QUERIES CON JOIN   #
########################

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT students.id AS `student_id`, students.name AS `student_name`, students.surname AS `student_surname`, degrees.name AS `degree_name`
FROM `students`
INNER JOIN `degrees`
ON degrees.id = students.degree_id
WHERE degrees.name = 'Corso di Laurea in Economia';





2. Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze

SELECT degrees.id AS `degree_id`, degrees.name AS `degree_name`, departments.name AS `department_name`
FROM `degrees`
INNER JOIN `departments`
ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di Neuroscienze';





3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT courses.id AS `course_id`, courses.name AS `course_name`, teachers.name AS `teacher_name`, teachers.surname AS `teacher_surname`
FROM `courses`
INNER JOIN `course_teacher`
ON courses.id = course_teacher.course_id
INNER JOIN `teachers`
ON course_teacher.teacher_id = teachers.id
WHERE teachers.name = 'Fulvio'
AND teachers.surname = 'Amato';





4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT students.id AS `student_id`, students.surname AS `student_surname`, students.name AS `student_name`, degrees.name AS `degree_name`, departments.name AS `department_name`
FROM `students`
INNER JOIN `degrees`
ON degrees.id = students.degree_id
INNER JOIN `departments`
ON departments.id = degrees.department_id
ORDER BY `student_surname`, `student_name`;





5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT degrees.name AS `degree_name`, courses.name AS `course_name`, teachers.name AS `teacher_name`, teachers.surname AS `teacher_surname`
FROM `course_teacher`
INNER JOIN `courses`
ON courses.id = course_teacher.course_id
INNER JOIN `degrees`
ON degrees.id = courses.degree_id
INNER JOIN `teachers`
ON teachers.id = course_teacher.teacher_id





6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (70)

SELECT teachers.name AS `teacher_name`, teachers.surname AS `teacher_surname`, courses.name AS `course_name`, departments.name AS `department_name`
FROM `course_teacher`
INNER JOIN `teachers`
ON teachers.id = course_teacher.teacher_id
INNER JOIN `courses`
ON courses.id = course_teacher.course_id
INNER JOIN `degrees`
ON degrees.id = courses.degree_id
INNER JOIN `departments`
ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di Matematica';





7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami

SELECT students.id AS `student_id`, students.surname AS `student_surname`, students.name AS `student_name`, courses.name AS `course_name`, count(courses.id) AS `n_attempts`
FROM `students`
INNER JOIN `exam_student`
ON students.id = exam_student.student_id
INNER JOIN `exams`
ON exams.id = exam_student.exam_id
INNER JOIN `courses`
ON courses.id = exams.course_id
GROUP BY `student_id`, `student_surname`, `student_name`, `course_name`;